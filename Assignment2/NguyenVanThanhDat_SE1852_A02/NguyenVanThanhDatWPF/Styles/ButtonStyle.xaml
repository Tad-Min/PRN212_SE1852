<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
                    
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!-- Nomal Button -->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5, 0, 0, 5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource color6}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                         BorderThickness="4,0,0,0"
                         BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <!-- Hover Button-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource btnColor3}"/>
                <Setter Property="Opacity" Value="0.9"/>
                <Setter Property="Foreground" Value="{StaticResource color2}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <!-- Active Button -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource btnColor3}"/>
                <Setter Property="Opacity" Value="0.9"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Icon Menu Button -->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <!-- Text Menu Button -->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- CRUD Button -->
    <Style x:Key="CRUDButton" TargetType="Button">
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="{StaticResource btnColor1}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="110"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- check Box-->
    <Style x:Key="CustomCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="Border"
                            Width="22" Height="22"
                            CornerRadius="5"
                            Background="Transparent"
                            BorderBrush="{StaticResource color5}"
                            BorderThickness="2"
                            VerticalAlignment="Center">
                            <Path x:Name="CheckMark"
                              Data="M 4 12 L 10 18 L 18 6"
                              Stroke="{StaticResource color5}"
                              StrokeThickness="2"
                              Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" Margin="8,0,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource btnColor1}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource btnColor2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>